
(:patch
 (:om-version 0.02)
 (:name "desintegrations")
 (:doc "")
 (:info
  (:created "2019/09/06 17:46:27")
  (:modified "2019/09/06 17:58:17"))
 (:window (:size (837 745)) (:position (700 190)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 326)
   (:y 235)
   (:w 87)
   (:h 35)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "The reference spectrum")
   (:id 0))
  (:comment
   (:x 521)
   (:y 367)
   (:w 99)
   (:h 80)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "The note offsets inside each chord are computed in order to have an arpeggio. ")
   (:id 1))
  (:comment
   (:x 639)
   (:y 303)
   (:w 134)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "This is just to show the curve.")
   (:id 2))
  (:comment
   (:x 585)
   (:y 190)
   (:w 206)
   (:h 77)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "The output of the lambda patch is a function. Now this function is sampled through the values 1 to 9.
These (decreasing) values will be used as the delays between chords.")
   (:id 3))
  (:comment
   (:x 11)
   (:y 321)
   (:w 105)
   (:h 158)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "For each of these tranpositions, the whole spectrum is stretched proportionally, thus becoming less and less harmonic.
Eight chords are built this way.
")
   (:id 4))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux4")
   (:x 25)
   (:y 156)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 5))
  (:comment
   (:x 520)
   (:y 96)
   (:w 204)
   (:h 64)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "This lambda patch contains the equation of segment of parabol passing through the 2 x,y points given as arguments")
   (:id 6))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux3")
   (:x 87)
   (:y 109)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8)
   (:id 7))
  (:comment
   (:x 235)
   (:y 98)
   (:w 126)
   (:h 43)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "spectrum partial numbers")
   (:id 8))
  (:comment
   (:x 154)
   (:y 45)
   (:w 79)
   (:h 24)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "Fundamental")
   (:id 9))
  (:comment
   (:x 238)
   (:y 1)
   (:w 398)
   (:h 35)
   (:fgcolor (:color 67/85 26/255 58/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Arial") (:size 18) (:style :bold)))
   (:align nil)
   (:text "From Désintégration by Tristan Murail")
   (:id 10))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "OMLOOP1")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (500 500)) (:position (353 368)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference bpf)
       (:type :object)
       (:group-id nil)
       (:name "BPF")
       (:x 144)
       (:y 26)
       (:w 88)
       (:h 79)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "BPF")
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:group-id nil)
       (:lock :locked)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 100)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0 0 0 1.0))
           (:decimals 0)
           (:x-points (:list 0 10 20 30 40 50 60 70 80 90 100))
           (:y-points (:list 0 25 40 52 61 69 75 81 86 91 95))))
         (:add-slots
          ((:decimals 0)
           (:color (:color 0 0 0 1.0))
           (:name nil)
           (:action nil)
           (:interpol
            (:number-or-nil (:number 50) (:t-or-nil nil)))))))
       (:id 0))
      (:box
       (:reference collect)
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 174)
       (:y 318)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 1))
      (:box
       (:reference om-round)
       (:type :function)
       (:group-id nil)
       (:name "om-round")
       (:x 174)
       (:y 254)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 231)
       (:y 210)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:reference length)
       (:type :function)
       (:group-id nil)
       (:name "length")
       (:x 85)
       (:y 111)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:reference bpf-sample)
       (:type :function)
       (:group-id nil)
       (:name "bpf-sample")
       (:x 149)
       (:y 156)
       (:w 93)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value
          (:object
           (:class bpf)
           (:slots
            ((:onset 0)
             (:duration 100)
             (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
             (:action nil)
             (:color (:color 0 0 0 1.0))
             (:decimals 0)
             (:x-points (:list 0 100))
             (:y-points (:list 0 100))))
           (:add-slots
            ((:decimals 0)
             (:color (:color 0 0 0 1.0))
             (:name nil)
             (:action nil)
             (:interpol
              (:number-or-nil (:number 50) (:t-or-nil nil)))))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "XMIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "XMAX")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NBSAMPLES")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "coeff")
         (:value 0.01)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "nbdec")
         (:value 4)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:reference iterate)
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 71)
       (:y 410)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input0")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input0")
       (:x 5)
       (:y 0)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:reference loop-list)
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 299)
       (:y 63)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 8))
      (:box
       (:reference loop-list)
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 1)
       (:y 63)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 9))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input1")
       (:x 303)
       (:y 26)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "output 1")
       (:x 283)
       (:y 409)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 11)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 1))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 5 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 3 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "OMLOOP1")
   (:x 447)
   (:y 467)
   (:w 89)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 11))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux2")
   (:x 164)
   (:y 212)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 12))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux11")
   (:x 452)
   (:y 136)
   (:w 36)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 180)
   (:id 13))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux10")
   (:x 436)
   (:y 103)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 14))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux9")
   (:x 418)
   (:y 136)
   (:w 36)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 600)
   (:id 15))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux8")
   (:x 402)
   (:y 103)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 16))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "mypatch")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (452 533)) (:position (644 237)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:comment
       (:x 188)
       (:y 425)
       (:w 79)
       (:h 27)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
       (:align nil)
       (:text "a X^2 + b")
       (:id 0))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 12)
       (:y 107)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 24)
       (:y 349)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:reference om+)
       (:type :function)
       (:group-id nil)
       (:name "om+")
       (:x 143)
       (:y 393)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:comment
       (:x 188)
       (:y 327)
       (:w 104)
       (:h 23)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
       (:align nil)
       (:text "b =Y0 - a.X0^2")
       (:id 4))
      (:box
       (:reference om-)
       (:type :function)
       (:group-id nil)
       (:name "om-")
       (:x 156)
       (:y 295)
       (:w 58)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 73)
       (:y 252)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:comment
       (:x 243)
       (:y 246)
       (:w 164)
       (:h 27)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
       (:align nil)
       (:text "a = (Y1-Y0)/(X1^2 - X0^2)")
       (:id 7))
      (:box
       (:reference om/)
       (:type :function)
       (:group-id nil)
       (:name "om/")
       (:x 188)
       (:y 214)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:reference om-)
       (:type :function)
       (:group-id nil)
       (:name "om-")
       (:x 101)
       (:y 178)
       (:w 58)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 61)
       (:y 139)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 201)
       (:y 139)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:reference om-)
       (:type :function)
       (:group-id nil)
       (:name "om-")
       (:x 296)
       (:y 139)
       (:w 58)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:type :io)
       (:group-id nil)
       (:name "output")
       (:x 144)
       (:y 454)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 13))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input")
       (:x 5)
       (:y 45)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input1")
       (:x 75)
       (:y 45)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "input2")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input2")
       (:x 145)
       (:y 45)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "input3")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input3")
       (:x 215)
       (:y 45)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 5)
         (:name "input4")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input4")
       (:x 285)
       (:y 45)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18)))
     (:connections
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 13 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 3 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 5 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 2 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 6 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 8 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 9 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 1 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 10 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 12 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 11 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "mypatch")
   (:x 388)
   (:y 178)
   (:w 95)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input4")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 17))
  (:box
   (:reference om-round)
   (:type :function)
   (:group-id nil)
   (:name "om-round")
   (:x 273)
   (:y 497)
   (:w 87)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil))
    (:input
     (:type :optional)
     (:name "decimals")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "divisor")
     (:value 0.5)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:reference om-round)
   (:type :function)
   (:group-id nil)
   (:name "om-round")
   (:x 404)
   (:y 363)
   (:w 87)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "OMLOOP1")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (500 500)) (:position (332 345)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference reverse)
       (:type :function)
       (:group-id nil)
       (:name "reverse")
       (:x 356)
       (:y 46)
       (:w 74)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference om-scale)
       (:type :function)
       (:group-id nil)
       (:name "om-scale")
       (:x 286)
       (:y 78)
       (:w 82)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 60)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 5)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:reference om-)
       (:type :function)
       (:group-id nil)
       (:name "om-")
       (:x 228)
       (:y 252)
       (:w 58)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:reference om-scale)
       (:type :function)
       (:group-id nil)
       (:name "om-scale")
       (:x 149)
       (:y 162)
       (:w 82)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 65)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 127)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:reference bpf)
       (:type :object)
       (:group-id nil)
       (:name "BPF")
       (:x 144)
       (:y 0)
       (:w 88)
       (:h 79)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "BPF")
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:group-id nil)
       (:lock :locked)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 100)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0 0 0 1.0))
           (:decimals 0)
           (:x-points (:list 0 10 20 30 40 50 60 70 80 90 100))
           (:y-points (:list 100 75 60 48 39 31 25 19 14 9 5))))
         (:add-slots
          ((:decimals 0)
           (:color (:color 0 0 0 1.0))
           (:name nil)
           (:action nil)
           (:interpol
            (:number-or-nil (:number 50) (:t-or-nil nil)))))))
       (:id 4))
      (:box
       (:reference collect)
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 161)
       (:y 347)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 5))
      (:box
       (:reference om-round)
       (:type :function)
       (:group-id nil)
       (:name "om-round")
       (:x 161)
       (:y 286)
       (:w 87)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:reference length)
       (:type :function)
       (:group-id nil)
       (:name "length")
       (:x 46)
       (:y 120)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:reference bpf-sample)
       (:type :function)
       (:group-id nil)
       (:name "bpf-sample")
       (:x 149)
       (:y 99)
       (:w 93)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value
          (:object
           (:class bpf)
           (:slots
            ((:onset 0)
             (:duration 100)
             (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
             (:action nil)
             (:color (:color 0 0 0 1.0))
             (:decimals 0)
             (:x-points (:list 0 100))
             (:y-points (:list 0 100))))
           (:add-slots
            ((:decimals 0)
             (:color (:color 0 0 0 1.0))
             (:name nil)
             (:action nil)
             (:interpol
              (:number-or-nil (:number 50) (:t-or-nil nil)))))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "XMIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "XMAX")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NBSAMPLES")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "coeff")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "nbdec")
         (:value 4)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:reference iterate)
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 71)
       (:y 410)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input0")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input0")
       (:x 5)
       (:y 0)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:reference loop-list)
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 290)
       (:y 150)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 11))
      (:box
       (:reference loop-list)
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 1)
       (:y 63)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 12))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input1")
       (:x 312)
       (:y 0)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "output 1")
       (:x 283)
       (:y 409)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 1))
       (:to (:box 14 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 8 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 2 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 0 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "OMLOOP1")
   (:x 349)
   (:y 467)
   (:w 89)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 20))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux6")
   (:x 545)
   (:y 500)
   (:w 20)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 21))
  (:box
   (:reference dx->x)
   (:type :function)
   (:group-id nil)
   (:name "dx->x")
   (:x 218)
   (:y 465)
   (:w 64)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "START")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value (:list 1 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:reference chord-seq)
   (:type :object)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 92)
   (:y 540)
   (:w 509)
   (:h 146)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 41312)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 2800 4702 5586 6168 6604 7102 7488 7804 8070 8372 8630)
         (:list 2800 4724 5618 6207 6648 7152 7542 7862 8131 8437 8698)
         (:list 2800 4746 5651 6246 6692 7202 7597 7920 8193 8502 8766)
         (:list 2800 4768 5683 6285 6737 7252 7651 7978 8254 8566 8833)
         (:list 2800 4790 5716 6325 6781 7302 7706 8037 8315 8631 8901)
         (:list 2800 4813 5748 6364 6825 7352 7760 8095 8376 8696 8969)
         (:list 2800 4835 5780 6403 6869 7402 7815 8153 8438 8761 9037)
         (:list 2800 4857 5813 6442 6913 7452 7869 8211 8499 8825 9104)
         (:list
          2800
          4879
          5845
          6481
          6958
          7502
          7924
          8269
          8560
          8890
          9172)))
       (:lonset
        (:list 0 6000 11843 17423 22636 27376 31539 35019 37712 41312))
       (:ldur
        (:list
         (:list
          12000
          12000
          12000
          12000
          12000
          12000
          12000
          12000
          12000
          12000
          12000)
         (:list
          11686
          11686
          11686
          11686
          11686
          11686
          11686
          11686
          11686
          11686
          11686)
         (:list
          11160
          11160
          11160
          11160
          11160
          11160
          11160
          11160
          11160
          11160
          11160)
         (:list
          10426
          10426
          10426
          10426
          10426
          10426
          10426
          10426
          10426
          10426
          10426)
         (:list 9480 9480 9480 9480 9480 9480 9480 9480 9480 9480 9480)
         (:list 8326 8326 8326 8326 8326 8326 8326 8326 8326 8326 8326)
         (:list 6960 6960 6960 6960 6960 6960 6960 6960 6960 6960 6960)
         (:list 5386 5386 5386 5386 5386 5386 5386 5386 5386 5386 5386)
         (:list
          3600
          3600
          3600
          3600
          3600
          3600
          3600
          3600
          3600
          3600
          3600)))
       (:lvel
        (:list
         (:list 67 51 41 33 27 22 18 14 11 8 5)
         (:list 79 62 53 45 39 34 30 26 23 19 17)
         (:list 89 73 63 55 49 44 40 36 33 30 27)
         (:list 98 82 72 64 58 53 49 45 42 39 36)
         (:list 106 89 79 72 66 60 57 53 49 46 44)
         (:list 112 95 86 78 72 67 63 59 56 52 50)
         (:list 117 100 90 83 77 71 68 64 60 57 55)
         (:list 120 104 94 86 80 75 71 67 64 61 58)
         (:list 122 106 96 88 82 77 73 69 66 63 60)))
       (:loffset
        (:list
         (:list 0 1500 2400 3120 3660 4140 4500 4860 5160 5460 5700)
         (:list 0 1461 2337 3038 3564 4032 4382 4733 5025 5317 5551)
         (:list 0 1395 2232 2902 3404 3850 4185 4520 4799 5078 5301)
         (:list 0 1303 2085 2711 3180 3597 3910 4223 4483 4744 4952)
         (:list 0 1185 1896 2465 2891 3271 3555 3839 4076 4313 4503)
         (:list 0 1041 1665 2165 2539 2872 3122 3372 3580 3788 3955)
         (:list 0 870 1392 1810 2123 2401 2610 2819 2993 3167 3306)
         (:list 0 673 1077 1400 1643 1858 2020 2181 2316 2451 2558)
         (:list 0 450 720 936 1098 1242 1350 1458 1548 1638 1710)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)))
       (:lport (:list nil nil nil nil nil nil nil nil nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 1500 2400 3120 3660 4140 4500 4860 5160 5460 5700)
         (:list 0 1461 2337 3038 3564 4032 4382 4733 5025 5317 5551)
         (:list 0 1395 2232 2902 3404 3850 4185 4520 4799 5078 5301)
         (:list 0 1303 2085 2711 3180 3597 3910 4223 4483 4744 4952)
         (:list 0 1185 1896 2465 2891 3271 3555 3839 4076 4313 4503)
         (:list 0 1041 1665 2165 2539 2872 3122 3372 3580 3788 3955)
         (:list 0 870 1392 1810 2123 2401 2610 2819 2993 3167 3306)
         (:list 0 673 1077 1400 1643 1858 2020 2181 2316 2451 2558)
         (:list 0 450 720 936 1098 1242 1350 1458 1548 1638 1710)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1)))
       (:lport (:list nil nil nil nil nil nil nil nil nil))
       (:llegato nil)))))
   (:id 23))
  (:box
   (:reference
    (:patch
     (:om-version 0.02)
     (:name "OMLOOP")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (500 500)) (:position (311 322)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 146)
       (:y 272)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference collect)
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 79)
       (:y 217)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 1))
      (:box
       (:reference list-min)
       (:type :function)
       (:group-id nil)
       (:name "list-min")
       (:x 214)
       (:y 79)
       (:w 75)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:reference om-scale)
       (:type :function)
       (:group-id nil)
       (:name "om-scale")
       (:x 74)
       (:y 150)
       (:w 99)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "minin")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "maxin")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:reference iterate)
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 15)
       (:y 305)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 4))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input0")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input0")
       (:x 23)
       (:y -10)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:reference loop-list)
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 19)
       (:y 47)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 6))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input1")
       (:x 122)
       (:y 20)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "output 1")
       (:x 142)
       (:y 317)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 8))
      (:box
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "input2")
         (:doc "no documentation")))
       (:type :io)
       (:group-id nil)
       (:name "input2")
       (:x 254)
       (:y 4)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:reference single-float)
       (:type :value)
       (:group-id nil)
       (:name "value box")
       (:x 172)
       (:y 237)
       (:w 33)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1.0)
       (:id 10)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 1))
       (:to (:box 0 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 3 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 3 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 3 :in 4))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 0 :in 1))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "OMLOOP")
   (:x 147)
   (:y 377)
   (:w 83)
   (:h 56)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input0")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 24))
  (:box
   (:reference nth-harm)
   (:type :function)
   (:group-id nil)
   (:name "nth-harm")
   (:x 147)
   (:y 240)
   (:w 84)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUND")
     (:value 3600)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NTH")
     (:value 12)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "UNIT")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TYPE")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:reference chord)
   (:type :object)
   (:group-id nil)
   (:name "CHORD")
   (:x 249)
   (:y 250)
   (:w 70)
   (:h 120)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (561 500)) (:position (290 299)))
   (:edition-params (:staff :gf))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic
        (:list 2800 4702 5586 6168 6604 7102 7488 7804 8070 8372 8630))
       (:lvel (:list 100 100 100 100 100 100 100 100 100 100 100))
       (:loffset (:list 0 0 0 0 0 0 0 0 0 0 0))
       (:ldur
        (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000))
       (:lchan (:list 1 1 1 1 1 1 1 1 1 1 1))
       (:lport nil)
       (:notes
        (:list
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 2800)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 4702)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 5586)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6168)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 6604)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7102)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7488)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 7804)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 8070)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 8372)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 8630)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))))))
     (:add-slots
      ((:onset 0)
       (:lchan (:list 1 1 1 1 1 1 1 1 1 1 1))
       (:lport nil)))))
   (:id 26))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "aux1")
   (:x 231)
   (:y 141)
   (:w 156)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 3 5 7 9 12 15 18 21 25 29))
   (:id 27))
  (:box
   (:reference chord)
   (:type :object)
   (:group-id nil)
   (:name "CHORD")
   (:x 156)
   (:y 72)
   (:w 70)
   (:h 97)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD")
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (561 500)) (:position (713 226)))
   (:edition-params (:staff :ff))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic (:list 2800))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:ldur (:list 1000))
       (:lchan (:list 1))
       (:lport nil)
       (:notes
        (:list
         (:object
          (:class note)
          (:slots
           ((:symbolic-date nil)
            (:symbolic-dur nil)
            (:symbolic-dur-extent 0)
            (:midic 2800)
            (:vel 100)
            (:dur 1000)
            (:chan 1)
            (:port nil)
            (:offset 0)))
          (:add-slots ((:port nil))))))))
     (:add-slots ((:onset 0) (:lchan (:list 1)) (:lport nil)))))
   (:id 28))
  (:box
   (:reference nth-harm)
   (:type :function)
   (:group-id nil)
   (:name "nth-harm")
   (:x 231)
   (:y 213)
   (:w 84)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUND")
     (:value 3600)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NTH")
     (:value (:list 1 2 3 4 5))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "UNIT")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TYPE")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:reference om+)
   (:type :function)
   (:group-id nil)
   (:name "om+")
   (:x 109)
   (:y 278)
   (:w 60)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 44)
   (:y 97)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 31))
  (:box
   (:reference om*)
   (:type :function)
   (:group-id nil)
   (:name "om*")
   (:x 67)
   (:y 141)
   (:w 60)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:reference arithm-ser)
   (:type :function)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 57)
   (:y 193)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:reference om-sample)
   (:type :function)
   (:group-id nil)
   (:name "om-sample")
   (:x 450)
   (:y 233)
   (:w 93)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NBS-SR")
     (:value 1.0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "xmin")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "xmax")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil))
    (:output (:name "out2") (:reactive nil)))
   (:id 34))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 485)
   (:y 196)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 35))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 503)
   (:y 166)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 36))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name "BPF")
   (:x 550)
   (:y 275)
   (:w 78)
   (:h 72)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "BPF")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 9.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:decimals 4)
       (:x-points (:list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))
       (:y-points
        (:list
         600.0
         584.25
         558.0
         521.25
         474.0
         416.25
         348.0
         269.25
         180.0))))
     (:add-slots
      ((:decimals 4)
       (:color (:color 0.0 0.0 0.0 1.0))
       (:name "BPF")
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 37))
  (:box
   (:reference om*)
   (:type :function)
   (:group-id nil)
   (:name "om*")
   (:x 461)
   (:y 305)
   (:w 60)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 10)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 487)
   (:y 270)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 39)))
 (:connections
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 33 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 32 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 23 :in 5))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 25 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 17 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 17 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 17 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 34 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 23 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 11 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 18 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 20 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 22 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 23 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 23 :in 7))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 23 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 11 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 20 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 23 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 24 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 30 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 1))
   (:to (:box 24 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 29 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 28 :out 1))
   (:to (:box 25 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 28 :out 1))
   (:to (:box 29 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 26 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 24 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 32 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 33 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 33 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 33 :out 0))
   (:to (:box 30 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 37 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 2))
   (:to (:box 38 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 35 :out 0))
   (:to (:box 34 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 34 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 38 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))